workflows:
  release-testflight:
    environment:
      node: 14.19.0
      npm: latest
      groups:
        - app_store_credentials
        - certificate_credentials
      vars:
        XCODE_WORKSPACE: "cordova/platforms/ios/pasco.xcworkspace"
        XCODE_SCHEME: "pasco" # <-- Put the name of your scheme here.
        BUNDLE_ID: "uk.org.acecentre.pasco" # <-- Put your Bundle Id here.
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        beta_groups:
          - pasco-testers
    scripts:
      - name: Install dependencies
        script: npm install

      - name: Install cordova deps
        working_directory: ./cordova
        script: npm install

      - name: Build web contents
        script: npm run build-prod

      - name: Build cordova distribution
        script: npm run cordova-dist

      - name: Add ios to cordova build
        working_directory: ./cordova
        script: npm run add-ios

      - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
        script: |
          keychain initialize

      - name: Fetch signing files
        script: |
          app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create

      - name: Add certificates to keychain
        script: |
          keychain add-certificates

      - name: Set up code signing settings on Xcode project
        script: |
          xcode-project use-profiles

      - name: Build iOS
        working_directory: ./cordova
        script: |
          package_type=$(defaults read ~/export_options.plist method)
          identity=$(defaults read ~/export_options.plist signingCertificate)
          team=$(defaults read ~/export_options.plist teamID)
          profile=$(find '/Users/builder/Library/MobileDevice/Provisioning Profiles' -name "*.mobileprovision")
          profile_uuid=$(grep UUID -A1 -a "$profile" | grep -io "[-A-F0-9]\{36\}")

          cat <<EOF > build.json
              {
                "ios": {
                  "release": {
                    "codeSignIdentity": "$identity",
                    "developmentTeam": "$team",
                    "packageType": "$package_type",
                    "provisioningProfile": "$profile_uuid"
                  }
                }
              }
          EOF
          cordova build ios --release --device --buildConfig='build.json'
    artifacts:
      - /Users/builder/clone/platforms/ios/build/device/*.ipa
      - /tmp/xcodebuild_logs/*.log
